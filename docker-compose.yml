version: '3.8'

services:
  yarn-scheduler:
    build: .
    container_name: yarn-fair-scheduler
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      # Mount Hadoop configuration as read-write by default
      - /etc/hadoop/conf:/etc/hadoop/conf:rw
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=5000
      - STORAGE_TYPE=sqlite
      - SQLITE_DB_PATH=/app/data/yarn-scheduler.db
      # Hadoop configuration
      - HADOOP_CONF_DIR=/etc/hadoop/conf
      - FAIR_SCHEDULER_XML_PATH=/etc/hadoop/conf/fair-scheduler.xml
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/queues', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - yarn-scheduler-network

  # Optional: Add PostgreSQL service if needed
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: yarn-scheduler-db
  #   environment:
  #     - POSTGRES_DB=yarn_config
  #     - POSTGRES_USER=yarn_user
  #     - POSTGRES_PASSWORD=yarn_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - yarn-scheduler-network

networks:
  yarn-scheduler-network:
    driver: bridge

volumes:
  # Uncomment if using PostgreSQL
  # postgres_data: